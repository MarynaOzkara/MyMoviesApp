{"version":3,"file":"static/js/315.f5828121.chunk.js","mappings":"kOAGaA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6MAarBC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8mBAIZ,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAAS,IAyBvCC,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yEAG1B,SAAAG,GAAK,OAAIA,EAAMC,MAAMK,IAAI,IAEvBC,EAAaZ,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,yDAIvBY,EAASd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,2IAOnBc,EAAUhB,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gLAUpBgB,EAAQlB,EAAAA,GAAAA,GAASmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,qJ,4BCrEjBkB,EAASpB,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uO,6BC2BnC,EAtBiB,SAAHmB,GAAmB,IAAbC,EAAKD,EAALC,MACZC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3BI,EAAKF,EAAA,GAAEG,EAAMH,EAAA,GAEpB,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACX,EAAM,CACLc,QAAS,WACPJ,GAAQD,GACRN,GAASY,EAAAA,EAAAA,IAAcb,GACzB,EAAEW,SAEAJ,GAGAE,EAAAA,EAAAA,KAACK,EAAAA,IAAY,CAACC,KAAM,GAAIC,MAAM,WAF9BP,EAAAA,EAAAA,KAACQ,EAAAA,IAAc,CAACF,KAAM,GAAIC,MAAM,aAO1C,ECaA,EA5BmB,SAAHjB,GAAoB,IAAdmB,EAAMnB,EAANmB,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACEX,EAAAA,EAAAA,KAAChC,EAAS,CAAAkC,SACPO,EAAOG,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAW,OACnCC,EAAAA,EAAAA,MAAC7C,EAAS,CAAA8B,SAAA,EACRe,EAAAA,EAAAA,MAACxC,EAAS,CAACyC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMX,GAAWR,SAAA,EACxDF,EAAAA,EAAAA,KAACnB,EAAU,CAAAqB,UACTF,EAAAA,EAAAA,KAACjB,EAAM,CACLuC,IACEN,EAAW,kCAAAG,OAC2BH,GAAW,qEAGnDO,IAAKR,OAITf,EAAAA,EAAAA,KAACb,EAAK,CAAAe,SAAEa,QAEVf,EAAAA,EAAAA,KAACf,EAAO,CAAAiB,UACNF,EAAAA,EAAAA,KAACwB,EAAQ,CAACjC,MAAO,CAAEuB,GAAAA,EAAIC,MAAAA,EAAOC,YAAAA,SAhBlBF,EAkBJ,KAIpB,C,kFCxBA,UAVgB,WACd,IAAQW,GAAMC,EAAAA,EAAAA,MAAND,EACFhB,GAASkB,EAAAA,EAAAA,IAAYC,EAAAA,IAC3B,OACEX,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKuB,EAAE,sBACNhB,IAAUT,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACpB,OAAQA,MAGrC,C","sources":["components/MoviesList/MoviesList.styled.js","components/Favorite/Favorite.styled.js","components/Favorite/Favorite.jsx","components/MoviesList/MoviesList.jsx","pages/Profile.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media (min-width: 767px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 20px 15px;\n  }\n`;\nexport const MovieItem = styled.li`\n  margin: 0 auto;\n  list-style: none;\n  max-width: 300px;\n  background-color: ${props => props.theme.movieWrap};\n  border-radius: var(--radii);\n  overflow: hidden;\n  position: relative;\n  @media (min-width: 767px) {\n    flex-basis: calc((100% - 2 * 15px) / 3);\n  }\n  @media (min-width: 1200px) {\n    flex-basis: calc((100% - 3 * 15px) / 4);\n  }\n\n  &:hover,\n  :focus {\n    box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n      0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  }\n  &:hover img,\n  :focus img {\n    transform: scale(1.2);\n  }\n  & :hover h1,\n  :focus h1 {\n    color: tomato;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  font-weight: bold;\n  color: ${props => props.theme.text};\n`;\nexport const PosterWrap = styled.div`\n  display: inline-block;\n  overflow: hidden;\n`;\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  /* width: 100%; */\n  transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\nexport const FavWrap = styled.div`\n  position: absolute;\n  z-index: 20;\n  top: 10px;\n  right: 10px;\n  width: 36px;\n  height: 36px;\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.3);\n`;\nexport const Title = styled.h1`\n  font-size: 18px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  text-align: center;\n  transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import styled from 'styled-components';\n\nexport const FavBtn = styled.button`\n  display: block;\n  width: 36px;\n  height: 36px;\n  background: transparent;\n  margin-left: auto;\n  border: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n","import { IoHeartOutline, IoHeartSharp } from 'react-icons/io5';\n\nimport React, { useState } from 'react';\nimport { FavBtn } from './Favorite.styled';\nimport { useDispatch } from 'react-redux';\nimport { addToFavorite } from 'redux/favorites/favoritesSlice';\n\nconst Favorite = ({ movie }) => {\n  const dispatch = useDispatch();\n  const [isFav, setFav] = useState();\n\n  return (\n    <>\n      <FavBtn\n        onClick={() => {\n          setFav(!isFav);\n          dispatch(addToFavorite(movie));\n        }}\n      >\n        {!isFav ? (\n          <IoHeartOutline size={34} color=\"white\" />\n        ) : (\n          <IoHeartSharp size={34} color=\"white\" />\n        )}\n      </FavBtn>\n    </>\n  );\n};\n\nexport default Favorite;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Poster,\n  Title,\n  PosterWrap,\n  FavWrap,\n} from './MoviesList.styled';\nimport Favorite from 'components/Favorite/Favorite';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <PosterWrap>\n              <Poster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                    : `https://place-hold.it/300x455?text=No%20Poster%20Image&fontsize=18`\n                }\n                alt={title}\n              />\n            </PosterWrap>\n\n            <Title>{title}</Title>\n          </MovieLink>\n          <FavWrap>\n            <Favorite movie={{ id, title, poster_path }} />\n          </FavWrap>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { selectFavorite } from 'redux/selectors';\n\nconst Profile = () => {\n  const { t } = useTranslation();\n  const movies = useSelector(selectFavorite);\n  return (\n    <>\n      <h2>{t('profile.favorite')}</h2>\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\nexport default Profile;\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","props","theme","movieWrap","MovieLink","Link","_templateObject3","text","PosterWrap","_templateObject4","Poster","_templateObject5","FavWrap","_templateObject6","Title","_templateObject7","FavBtn","_ref","movie","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isFav","setFav","_jsx","_Fragment","children","onClick","addToFavorite","IoHeartSharp","size","color","IoHeartOutline","movies","location","useLocation","map","_ref2","id","title","poster_path","_jsxs","to","concat","state","from","src","alt","Favorite","t","useTranslation","useSelector","selectFavorite","MoviesList"],"sourceRoot":""}