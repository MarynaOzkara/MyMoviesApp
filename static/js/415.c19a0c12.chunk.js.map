{"version":3,"file":"static/js/415.c19a0c12.chunk.js","mappings":"8PAiEA,UAjDa,WACX,IAAQA,GAAMC,EAAAA,EAAAA,MAAND,EACFE,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAWJ,EAAAA,EAAAA,IAAYK,EAAAA,IACvBC,GAAaN,EAAAA,EAAAA,IAAYO,EAAAA,IACzBC,GAAYR,EAAAA,EAAAA,IAAYS,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAkCjB,OAjCAC,QAAQC,IAAIX,GACZU,QAAQC,IAAIT,IACZU,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,IAAkB,CAAEb,KAAM,EAAGE,SAAUA,IAClD,GAAG,CAACM,EAAUN,KAEdU,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAgBC,KAAS,SAAAC,IACX,IAAdV,IAGiBU,EAAEC,OAAOC,gBAAgBC,cAC5BH,EAAEC,OAAOC,gBAAgBE,UACtBC,OAAOC,aAEkB,KAC5CtB,EAAOI,IAEPM,QAAQC,IAAIK,GACZN,QAAQC,IAAIX,GACZQ,GAASK,EAAAA,EAAAA,IAAkB,CAAEb,KAAMA,EAAME,SAAUA,MAMvD,IAEA,OADAqB,SAASC,iBAAiB,SAAUV,GAC7B,WACLS,SAASE,oBAAoB,SAAUX,EACzC,CACF,GAAG,CAACN,EAAUR,EAAMI,EAAYE,EAAWJ,KAGzCwB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAAAF,SAAEhC,EAAE,gBACTW,IAAasB,EAAAA,EAAAA,KAACE,EAAAA,EAAM,IACpBjC,IAAU+B,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAAClC,OAAQA,MAGrC,C","sources":["pages/Home.jsx"],"sourcesContent":["import { Title } from 'components/App.styled';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect } from 'react';\nimport { getTrendingMovies } from 'redux/movies/movie-api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectLenguage,\n  selectMovies,\n  selectPage,\n  selectTotalPages,\n} from 'redux/selectors';\nimport throttle from 'lodash.throttle';\nimport { useTranslation } from 'react-i18next';\n\nconst Home = () => {\n  const { t } = useTranslation();\n  const movies = useSelector(selectMovies);\n  const page = useSelector(selectPage);\n  const language = useSelector(selectLenguage);\n  const totalPages = useSelector(selectTotalPages);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  console.log(page);\n  console.log(language);\n  useEffect(() => {\n    dispatch(getTrendingMovies({ page: 1, language: language }));\n  }, [dispatch, language]);\n\n  useEffect(() => {\n    const scrollHandler = throttle(e => {\n      if (isLoading === true) {\n        return;\n      }\n      const scrollHeight = e.target.documentElement.scrollHeight;\n      const heightTop = e.target.documentElement.scrollTop;\n      const windowHeight = window.innerHeight;\n      if (\n        scrollHeight - (heightTop + windowHeight) < 100 &&\n        page < totalPages\n      ) {\n        console.log(e);\n        console.log(page);\n        dispatch(getTrendingMovies({ page: page, language: language }));\n      }\n\n      // console.log(scrollHeight);\n      // console.log(heightTop);\n      // console.log(windowHeight);\n    });\n    document.addEventListener('scroll', scrollHandler);\n    return function () {\n      document.removeEventListener('scroll', scrollHandler);\n    };\n  }, [dispatch, page, totalPages, isLoading, language]);\n\n  return (\n    <main>\n      <Title>{t('home.title')}</Title>\n      {isLoading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\nexport default Home;\n"],"names":["t","useTranslation","movies","useSelector","selectMovies","page","selectPage","language","selectLenguage","totalPages","selectTotalPages","isLoading","selectIsLoading","dispatch","useDispatch","console","log","useEffect","getTrendingMovies","scrollHandler","throttle","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","document","addEventListener","removeEventListener","_jsxs","children","_jsx","Title","Loader","MoviesList"],"sourceRoot":""}