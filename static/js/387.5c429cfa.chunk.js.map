{"version":3,"file":"static/js/387.5c429cfa.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ActorsWrap = styled.div`\n  margin-top: 20px;\n`;\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const ActorItem = styled.li`\n  background-color: ${props => props.theme.movieWrap};\n  border-radius: var(--radii);\n  overflow: hidden;\n  list-style: none;\n  margin-bottom: 10px;\n  flex-basis: calc((100% - 2 * 10px) / 3);\n\n  @media (min-width: 767px) {\n    flex-basis: calc((100% - 3 * 10px) / 4);\n  }\n  @media (min-width: 1200px) {\n    flex-basis: calc((100% - 5 * 10px) / 6);\n  }\n`;\nexport const ActorImg = styled.img`\n  width: 100%;\n`;\nexport const InfoList = styled.ul`\n  margin: 4px 8px;\n  padding: 0;\n`;\nexport const InfoItem = styled.li`\n  list-style: none;\n\n  margin-bottom: 8px;\n`;\nexport const InfoText = styled.p`\n  font-size: var(--fs-ss);\n  @media (min-width: 767px) {\n    font-size: var(--fs-sm);\n  }\n`;\n","import Loader from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  ActorsWrap,\n  ActorsList,\n  ActorItem,\n  ActorImg,\n  InfoList,\n  InfoItem,\n  InfoText,\n} from './Cast.styled';\nimport { getMovieCast } from 'redux/movies/movie-api';\nimport { useTranslation } from 'react-i18next';\n\nconst Cast = () => {\n  const { t } = useTranslation();\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const actors = await getMovieCast(movieId);\n        setActors(actors);\n\n        console.log(actors);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n  return (\n    <ActorsWrap>\n      {isLoading && <Loader />}\n      <ActorsList>\n        {actors.length === 0 ? (\n          <div>{t('movieDetails.noInfoActor')}</div>\n        ) : (\n          actors.map(({ cast_id, original_name, character, profile_path }) => (\n            <ActorItem key={cast_id}>\n              <ActorImg\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `https://place-hold.it/200x300?text=No%20Actor%20Image&fontsize=18`\n                }\n                alt={original_name}\n              />\n              <InfoList>\n                <InfoItem>\n                  <InfoText>\n                    <b>{t('movieDetails.actor')}:</b> {original_name}\n                  </InfoText>\n                </InfoItem>\n                <InfoItem>\n                  <InfoText>\n                    <b>{t('movieDetails.character')}:</b> {character}\n                  </InfoText>\n                </InfoItem>\n              </InfoList>\n            </ActorItem>\n          ))\n        )}\n      </ActorsList>\n    </ActorsWrap>\n  );\n};\nexport default Cast;\n"],"names":["ActorsWrap","styled","_templateObject","_taggedTemplateLiteral","ActorsList","_templateObject2","ActorItem","_templateObject3","props","theme","movieWrap","ActorImg","_templateObject4","InfoList","_templateObject5","InfoItem","_templateObject6","InfoText","_templateObject7","t","useTranslation","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_actors","wrap","_context","prev","next","getMovieCast","sent","console","log","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","length","map","_ref2","cast_id","original_name","character","profile_path","src","concat","alt"],"sourceRoot":""}