{"version":3,"file":"static/js/577.dcc24542.chunk.js","mappings":"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","sources":["components/SearchMovieForm/SearchMovieForm.styled.js","components/SearchMovieForm/SearchMovieForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 270px;\n  height: 40px;\n  border: none;\n  outline: none;\n  border: 2px solid ${props => props.theme.brend};\n  border-radius: 4px;\n  padding-left: 20px;\n\n  &::placeholder {\n    font-size: 16px;\n  }\n  @media (min-width: 767px) {\n    width: 500px;\n  }\n`;\nexport const Button = styled.button`\n  display: block;\n  border: none;\n  border-radius: 5px;\n  width: 60px;\n  height: 40px;\n  font-size: var(--fs-ss);\n  background-color: ${props => props.theme.brend};\n  color: ${props => props.theme.acsent};\n\n  cursor: pointer;\n  @media (min-width: 767px) {\n    width: 100px;\n    height: 44px;\n    font-size: var(--fs-md);\n  }\n\n  &:hover,\n  :focus {\n    background-color: ${props => props.theme.acsent};\n    color: ${props => props.theme.brend};\n    border: 2px solid ${props => props.theme.brend};\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 30px;\n  @media (min-width: 767px) {\n    gap: 20px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, Button, Form } from './SearchMovieForm.styled';\nimport { setPage, setQuery } from 'redux/movies/searchMoviesSlice';\nimport { selectSearchQuery } from 'redux/selectors';\nimport { useTranslation } from 'react-i18next';\n\nconst SearchMovieForm = () => {\n  const { t } = useTranslation();\n  const oldQuery = useSelector(selectSearchQuery);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.query.value;\n    // console.log(query);\n\n    // console.log(oldQuery);\n    if (!query) {\n      alert('Type movie name to start search!');\n    }\n    oldQuery === query\n      ? alert('Write new movie name')\n      : dispatch(setQuery(query));\n    dispatch(setPage(1));\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          autoFocus\n          placeholder=\"Search movie ...\"\n        />\n        <Button type=\"submit\">{t('movies.button')}</Button>\n      </Form>\n    </>\n  );\n};\nexport default SearchMovieForm;\n","import SearchMovieForm from 'components/SearchMovieForm/SearchMovieForm';\nimport { useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport throttle from 'lodash.throttle';\nimport { Title } from 'components/App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLenguage,\n  selectSearchIsLoading,\n  selectSearchMoviePage,\n  selectSearchMovies,\n  selectSearchQuery,\n  selectSearchTotalPages,\n} from 'redux/selectors';\nimport { searchMovies } from 'redux/movies/movie-api';\nimport { useTranslation } from 'react-i18next';\n\nconst Movies = () => {\n  const { t } = useTranslation();\n  const query = useSelector(selectSearchQuery);\n  const movies = useSelector(selectSearchMovies);\n  const isLoading = useSelector(selectSearchIsLoading);\n  const page = useSelector(selectSearchMoviePage);\n  const language = useSelector(selectLenguage);\n  const totalPages = useSelector(selectSearchTotalPages);\n  const dispatch = useDispatch();\n  // console.log(query);\n  // console.log(page);\n\n  useEffect(() => {\n    if (query)\n      dispatch(searchMovies({ query: query, page: 1, language: language }));\n  }, [dispatch, query, language]);\n  useEffect(() => {\n    const scrollHandler = throttle(e => {\n      if (isLoading === true) {\n        return;\n      }\n      const scrollHeight = e.target.documentElement.scrollHeight;\n      const heightTop = e.target.documentElement.scrollTop;\n      const windowHeight = window.innerHeight;\n      if (\n        scrollHeight - (heightTop + windowHeight) < 100 &&\n        page < totalPages\n      ) {\n        dispatch(\n          searchMovies({ query: query, page: page, language: language })\n        );\n        console.log(page);\n        console.log(query);\n      }\n\n      // console.log(scrollHeight);\n      // console.log(heightTop);\n      // console.log(windowHeight);\n    });\n    document.addEventListener('scroll', scrollHandler);\n    return function () {\n      document.removeEventListener('scroll', scrollHandler);\n    };\n  }, [dispatch, page, query, totalPages, isLoading, language]);\n\n  return (\n    <main>\n      <Title>{t('movies.subtitle')}</Title>\n      <SearchMovieForm />\n      {isLoading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["Input","styled","_templateObject","_taggedTemplateLiteral","props","theme","brend","Button","_templateObject2","acsent","Form","_templateObject3","t","useTranslation","oldQuery","useSelector","selectSearchQuery","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","query","currentTarget","elements","value","alert","setQuery","setPage","type","name","autoFocus","placeholder","movies","selectSearchMovies","isLoading","selectSearchIsLoading","page","selectSearchMoviePage","language","selectLenguage","totalPages","selectSearchTotalPages","useEffect","searchMovies","scrollHandler","throttle","target","documentElement","scrollHeight","scrollTop","window","innerHeight","console","log","document","addEventListener","removeEventListener","Title","SearchMovieForm","Loader","MoviesList"],"sourceRoot":""}