{"version":3,"file":"static/js/334.1285b165.chunk.js","mappings":"wSACaA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAI7BC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qN,SC2CrC,EA1CgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAoB9B,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAED,OAFCF,EAAAC,KAAA,EAEpBb,GAAa,GAAMY,EAAAE,KAAA,GACEC,EAAAA,EAAAA,IAAe1B,GAAS,KAAD,EAAtCmB,EAAMI,EAAAI,KACNP,EAASD,EAAOS,MAAK,SAAAC,GAAK,OAAuB,IAAnBA,EAAMC,QAAiB,IACrDxB,EAAYc,EAAOW,IACzBxB,EAAaD,GAEb0B,QAAQC,IAAI3B,GAAWiB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEvBS,QAAQC,IAAIV,EAAAW,GAAMC,SAAS,QAEP,OAFOZ,EAAAC,KAAA,GAE3Bb,GAAa,GAAOY,EAAAa,OAAA,6BAAAb,EAAAc,OAAA,GAAAnB,EAAA,yBAEvB,kBAdoB,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAerB1B,GACF,GAAG,CAACb,KAEFwC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGhC,IAAaiC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAEpBtC,IACCqC,EAAAA,EAAAA,KAACjD,EAAgB,CAAAgD,UACfC,EAAAA,EAAAA,KAAC7C,EAAW,CAAA4C,UACVC,EAAAA,EAAAA,KAACE,IAAW,CACVC,IAAG,mCAAAC,OAAqCzC,GACxC0C,UAAQ,EACRC,MAAM,OACNC,OAAO,eAOrB,C","sources":["components/Trailer/Trailer.styled.js","components/Trailer/Trailer.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const TrailerContainer = styled.div`\n  margin-top: 40px;\n`;\n\nexport const TrailerWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  aspect-ratio: 16/9;\n  margin: 0 auto;\n  border-radius: var(--radii);\n  overflow: hidden;\n  @media (min-width: 767px) {\n    width: 640px;\n    height: 360px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieTraler } from 'redux/movies/movie-api';\nimport Loader from 'components/Loader/Loader';\nimport ReactPlayer from 'react-player/youtube';\nimport { TrailerContainer, TrailerWrap } from './Trailer.styled';\nconst Trailer = () => {\n  const { movieId } = useParams();\n  const [tralerKey, setTralerKey] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieVideo = async () => {\n      try {\n        setIsLoading(true);\n        const videos = await getMovieTraler(movieId);\n        const traler = videos.find(video => video.official === true);\n        const tralerKey = traler.key;\n        setTralerKey(tralerKey);\n\n        console.log(tralerKey);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieVideo();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {tralerKey && (\n        <TrailerContainer>\n          <TrailerWrap>\n            <ReactPlayer\n              url={`https://www.youtube.com/watch?v=${tralerKey}`}\n              controls\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </TrailerWrap>\n        </TrailerContainer>\n      )}\n    </>\n  );\n};\nexport default Trailer;\n"],"names":["TrailerContainer","styled","_templateObject","_taggedTemplateLiteral","TrailerWrap","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","tralerKey","setTralerKey","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieVideo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","videos","traler","_tralerKey","wrap","_context","prev","next","getMovieTraler","sent","find","video","official","key","console","log","t0","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","ReactPlayer","url","concat","controls","width","height"],"sourceRoot":""}